{"remainingRequest":"C:\\Users\\82019\\bulgari\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\82019\\bulgari\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\82019\\bulgari\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\82019\\bulgari\\src\\components\\content\\shop\\Shopping.vue?vue&type=template&id=c81d5fea&","dependencies":[{"path":"C:\\Users\\82019\\bulgari\\src\\components\\content\\shop\\Shopping.vue","mtime":1587537443590},{"path":"C:\\Users\\82019\\bulgari\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\82019\\bulgari\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\82019\\bulgari\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\82019\\bulgari\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}