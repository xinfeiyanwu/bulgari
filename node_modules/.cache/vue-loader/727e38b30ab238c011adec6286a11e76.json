{"remainingRequest":"C:\\Users\\82019\\bulgari\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\82019\\bulgari\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\82019\\bulgari\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\82019\\bulgari\\src\\components\\content\\shop\\Shopping.vue?vue&type=template&id=c81d5fea&","dependencies":[{"path":"C:\\Users\\82019\\bulgari\\src\\components\\content\\shop\\Shopping.vue","mtime":1586598868276},{"path":"C:\\Users\\82019\\bulgari\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\82019\\bulgari\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\82019\\bulgari\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\82019\\bulgari\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7IHN0YXRpY0NsYXNzOiAiU2hvcHBpbmciIH0sCiAgICBbCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJzaG9wT3BlciIgfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImVsLWJyZWFkY3J1bWIiLAogICAgICAgICAgICB7IGF0dHJzOiB7ICJzZXBhcmF0b3ItY2xhc3MiOiAiZWwtaWNvbi1hcnJvdy1yaWdodCIgfSB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImVsLWJyZWFkY3J1bWItaXRlbSIsIHsgYXR0cnM6IHsgdG86IHsgcGF0aDogIi8iIH0gfSB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIummlumhtSIpCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImVsLWJyZWFkY3J1bWItaXRlbSIsIFsKICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3ModGhpcy4kcm91dGUucXVlcnkuUHJvZHVjdFNvcnROYXZOYW1lKSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZWwtYnJlYWRjcnVtYi1pdGVtIiwgWwogICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyh0aGlzLiRyb3V0ZS5xdWVyeS5Qcm9kdWN0U29ydFR5cGUpKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJlbC1icmVhZGNydW1iLWl0ZW0iLCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKHRoaXMuJHJvdXRlLnF1ZXJ5LlByb2R1Y3RUeXBlKSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZWwtYnJlYWRjcnVtYi1pdGVtIiwgWwogICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyh0aGlzLiRyb3V0ZS5xdWVyeS5wcm9kdWN0U2VyaWVzTmFtZSkpCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZWwtcm93IiwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJlbC1jb2wiLCB7IGF0dHJzOiB7IHNwYW46IDEwLCBvZmZzZXQ6IDMgfSB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImRpc3BsYXkiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6ICIiLCBhbHQ6ICIiIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX3ZtLl92KCIxMTEgIikKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZWwtY29sIiwgeyBhdHRyczogeyBzcGFuOiAxMSB9IH0sIFsKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic2hvcHBpbmdJbmZvIiB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiUHJvZHVjdFR5cGUiIH0sIFtfdm0uX3YoIumSseWMhSIpXSksCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicHJvZHVjdFNlcmllc05hbWUiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIkJWTEdBUkkgQlZMR0FSSeeUt+Wjq+ezu+WIlyIpCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIk5PIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCLnvJblj7ciKV0pLAogICAgICAgICAgICAgICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCIyODkxMDEiKV0pCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJwcm9JbnRyb2R1Y3Rpb24iIH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAi4oCcQlZMR0FSSSBCVkxHQVJJ4oCd54Kt6buR6ZK755+z6Imy5ZKM6bKc57u/6Imy57KS6Z2i5bCP54mb55qu55S35aOr5ouJ6ZO+6ZKx5aS577yM54Kt6buR6ZK755+z6Imy5bCP576K55qu5YaF6KGs44CC57uP5YW45qCH6K+G6YWN6aWw77yM6YeH55So6ZWA6ZKv6buE6ZOc5p2Q6LSo44CCIgogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiQ29pbiIgfSwgW192bS5fdigiwqUgNSwxMDAiKV0pLAogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm51bVNlbGVjdCIgfSwgWwogICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgInNlbGVjdCIsCiAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IGhlaWdodDogIjMzcHgiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IG5hbWU6ICIiLCBpZDogIiIgfQogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgX2MoIm9wdGlvbiIsIHsgYXR0cnM6IHsgdmFsdWU6ICIiIH0gfSwgW192bS5fdigiMSIpXSksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJvcHRpb24iLCB7IGF0dHJzOiB7IHZhbHVlOiAiIiB9IH0sIFtfdm0uX3YoIjIiKV0pLAogICAgICAgICAgICAgICAgICAgICAgICBfYygib3B0aW9uIiwgeyBhdHRyczogeyB2YWx1ZTogIiIgfSB9LCBbX3ZtLl92KCIzIildKQogICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZ2lmdEJveCIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5HaWZ0Qm94SGlkZGVuCiAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic2VsUHJldiIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInN0cm9uZyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmdpZnRCb3hTZWxTdGF0ZSA9IHRydWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCLpgInmi6nnpLznm5LlrprliLbmnI3liqEiKV0KICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInN0cm9uZyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLk5vdGljZVN0YXRlID0gdHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIuaVrOivt+azqOaEjyIpXQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgIDogX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzZWxBZnRlciIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL3Nob3AvZ2lmdEJveEltZy9DTEFTU0lDMy5wbmciKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0OiAiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdigi6IqC5pel57uP5YW456S855uSIildKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzcGFuIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtb2RpZnkiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLm1vZGlmeUhhbmRsZSB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigi5L+u5pS5IildCiAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJhZGRTaG9wcGluZ0NhciIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigi5re75Yqg5Yiw6LSt54mp6KKLIikKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYm9va2FuYXBwb2ludG1lbnQiLAogICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5zZWxlY3RTZXJ2ZSA9IHRydWUKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigi57K+5ZOB5bqX5pyN5YqhIildCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZmluZFN0b3JlIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIiLCB0aXRsZTogIuWvu+aJvumZhOi/keW6l+mTuiIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIuWvu+aJvumZhOi/keW6l+mTuiIpCiAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGlua1dlIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIg6IGU57O75oiR5LusICIpLAogICAgICAgICAgICAgICAgICAgIF9jKCJpIiwgeyBzdGF0aWNDbGFzczogImVsLWljb24tbWVzc2FnZSIgfSksCiAgICAgICAgICAgICAgICAgICAgX2MoImkiLCB7IHN0YXRpY0NsYXNzOiAiZWwtaWNvbi1waG9uZS1vdXRsaW5lIiB9KSwKICAgICAgICAgICAgICAgICAgICBfYygiaSIsIHsgc3RhdGljQ2xhc3M6ICJlbC1pY29uLWNoYXQtZG90LXNxdWFyZSIgfSkKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfYygKICAgICAgICAiZGl2IiwKICAgICAgICB7IHN0YXRpY0NsYXNzOiAic2hvcHBpbmdDb250ZW50IiB9LAogICAgICAgIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZWwtdGFicyIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgdmFsdWU6IF92bS50YWJzMSwKICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgX3ZtLnRhYnMxID0gJCR2CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInRhYnMxIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJlbC10YWItcGFuZSIsIHsgYXR0cnM6IHsgbGFiZWw6ICLmj4/ov7AiLCBuYW1lOiAiZGV0YWlsIiB9IH0sIFsKICAgICAgICAgICAgICAgIF9jKCJoMyIsIFtfdm0uX3YoIumSseWMhSIpXSksCiAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICcg5q2k5qy+5omL5oyB6ZKx5aS55Lul5Lmz6JuL55m955+z6Imy6YeR5bGe6LSo5oSf5rC06JuH55qu5ZKM5Lmz6JuL55m955+z6Imy5bCP54mb55qu5Yi25oiQ77yM6aWw5pyJ6ZWM5Yi74oCcQlZMR0FSSSBCVkxHQVJJ4oCd5qCH6K+G55qE5rWF6YeR6ZWA6YeR6buE6ZOc546v5omj44CC5Lmd5Liq5L+h55So5Y2h5Y2h5L2N77yM5Lik5Liq57q45biB6ZqU5bGC77yM5LiA5Liq5ouJ6ZO+6Zu26ZKx5YyF44CCMTkgeCA5IGNtLiAtIDcuNSB4IDMuNSIgJwogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImVsLXRhYi1wYW5lIiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgbGFiZWw6ICLlrp3moLzkuL3phY3ppbAiLCBuYW1lOiAiQWNjIiB9IH0sCiAgICAgICAgICAgICAgICBbX2MoInAiLCBbX3ZtLl92KCJCdWxnYXJp5a6d5qC85Li955qu5YW35Y+K6YWN6aWw5Z2H5Zyo5oSP5aSn5Yip5Yi26YCgICIpXSldCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJyZWxldkNvbnQiIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJlbC10YWJzIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicmVsZXZDb250UGFkZGluZyIsCiAgICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0udGFiczIsCiAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgIF92bS50YWJzMiA9ICQkdgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJ0YWJzMiIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJlbC10YWItcGFuZSIsCiAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGxhYmVsOiAi55u45YWz5Lqn5ZOBIiwgbmFtZTogInJlbGFldlBybyIgfSB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInN3aXBlci1jb250YWluZXIgQmFubmVyMSIsCiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjgwJSIgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAic3dpcGVyLXdyYXBwZXIiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fbCg2LCBmdW5jdGlvbihpdGVtLCBpbmRleCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBrZXk6IGluZGV4LCBzdGF0aWNDbGFzczogInN3aXBlci1zbGlkZSIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9zaG9wL3JlbGV2U2hvcC8yODkxMDFfMDAyLnBuZyIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0OiAiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaXRlbURldGFpbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb3VzZWxlYXZlOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmxlYXZlRGV0YWlsKCRldmVudCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW91c2VlbnRlcjogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5sb29rRGV0YWlsKCRldmVudCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImg0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaXRlbU5hbWUiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86ICIvIiB9IH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiBCVkxHQVJJIEJWTEdBUknns7vliJciKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiDlkI3niYflpLkgIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIFtfdm0uX3YoIue8luWPtyIpXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoIjI4NzYxMiIpXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgMAogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInN3aXBlci1idXR0b24tcHJldiIsCiAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgb3V0bGluZTogIm5vbmUiLCBsZWZ0OiAiNzRweCIgfQogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInN3aXBlci1idXR0b24tbmV4dCIsCiAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgb3V0bGluZTogIm5vbmUiLCByaWdodDogIjcycHgiIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImVsLXRhYi1wYW5lIiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgbGFiZWw6ICLmm7TlpJrnp43nsbsiLCBuYW1lOiAibW9yZVNvcnQiIH0gfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIm1vcmVTb3J0IiB9LAogICAgICAgICAgICAgICAgICAgIF92bS5fbCgzLCBmdW5jdGlvbihpdGVtKSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICB7IGtleTogaXRlbSwgc3RhdGljQ2xhc3M6ICJtb3JlU29ydEl0ZW0iIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9zaG9wL3JlbGV2U2hvcC8yODkxMDFfMDAyLnBuZyIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHQ6ICIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpdGVtRGV0YWlsIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb3VzZWxlYXZlOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0ubGVhdmVEZXRhaWwoJGV2ZW50KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW91c2VlbnRlcjogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmxvb2tEZXRhaWwoJGV2ZW50KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJoNCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaXRlbU5hbWUiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJyb3V0ZXItbGluayIsIHsgYXR0cnM6IHsgdG86ICIvIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiBCVkxHQVJJIEJWTEdBUknns7vliJciKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiDlkI3niYflpLkgIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdigi57yW5Y+3IildKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoIjI4NzYxMiIpXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgIDAKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhdGVseUxvb2siIH0sIFsKICAgICAgICBfdm0uX20oMCksCiAgICAgICAgX2MoCiAgICAgICAgICAiZGl2IiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJzd2lwZXItY29udGFpbmVyIEJhbm5lcjEiLAogICAgICAgICAgICBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjgwJSIgfQogICAgICAgICAgfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInN3aXBlci13cmFwcGVyIiB9LAogICAgICAgICAgICAgIF92bS5fbCg2LCBmdW5jdGlvbihpdGVtLCBpbmRleCkgewogICAgICAgICAgICAgICAgcmV0dXJuIF9jKCJkaXYiLCB7IGtleTogaW5kZXgsIHN0YXRpY0NsYXNzOiAic3dpcGVyLXNsaWRlIiB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9hc3NldHMvc2hvcC9yZWxldlNob3AvMjg5MTAxXzAwMi5wbmciKSwKICAgICAgICAgICAgICAgICAgICAgIGFsdDogIiIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIml0ZW1EZXRhaWwiLAogICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgbW91c2VsZWF2ZTogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5sZWF2ZURldGFpbCgkZXZlbnQpCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIG1vdXNlZW50ZXI6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0ubG9va0RldGFpbCgkZXZlbnQpCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJoNCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIml0ZW1OYW1lIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJyb3V0ZXItbGluayIsIHsgYXR0cnM6IHsgdG86ICIvIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgQlZMR0FSSSBCVkxHQVJJ57O75YiXIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiDlkI3niYflpLkgIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fbSgxLCB0cnVlKQogICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgMAogICAgICAgICAgICApCiAgICAgICAgICBdCiAgICAgICAgKSwKICAgICAgICBfYygiZGl2IiwgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJzd2lwZXItYnV0dG9uLXByZXYiLAogICAgICAgICAgc3RhdGljU3R5bGU6IHsgb3V0bGluZTogIm5vbmUiLCBsZWZ0OiAiNzRweCIgfQogICAgICAgIH0pLAogICAgICAgIF9jKCJkaXYiLCB7CiAgICAgICAgICBzdGF0aWNDbGFzczogInN3aXBlci1idXR0b24tbmV4dCIsCiAgICAgICAgICBzdGF0aWNTdHlsZTogeyBvdXRsaW5lOiAibm9uZSIsIHJpZ2h0OiAiNzJweCIgfQogICAgICAgIH0pLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiTW9yZUdpZnRCb3giIH0sIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIk1vcmVHaWZ0Qm94TGVmdCIgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJyb3V0ZXItbGluayIsIHsgYXR0cnM6IHsgdG86ICIvIiB9IH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9zaG9wL3JlbGV2U2hvcC9jbXNfdmlzX3R4dF9pbWdfZGVza3RvcF82MjUzX3ZfNC5qcGciKSwKICAgICAgICAgICAgICAgICAgICBhbHQ6ICIiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiTW9yZUdpZnRCb3hSaWdodCIgfSwgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygiaDUiLCBbX3ZtLl92KCLmr4/kuKrkvZzlk4HlnYfpmYTmnInni6znq4vnmoTnsr7nvo7ljIXoo4UiKV0pLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJrb253TW9yZSIsIGF0dHJzOiB7IHRvOiAiLyIgfSB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCLkuobop6Pmm7TlpJoiKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDEKICAgICAgICAgICAgKQogICAgICAgICAgXSkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX2MoCiAgICAgICAgImVsLWRpYWxvZyIsCiAgICAgICAgewogICAgICAgICAgYXR0cnM6IHsgdmlzaWJsZTogX3ZtLmdpZnRCb3hTZWxTdGF0ZSwgd2lkdGg6ICI1MyUiLCBjZW50ZXI6ICIiIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICAidXBkYXRlOnZpc2libGUiOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICBfdm0uZ2lmdEJveFNlbFN0YXRlID0gJGV2ZW50CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZ2lmdFNlbEJveCIgfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImdpZnREaXNwbGF5IiB9LCBbCiAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgIHNyYzoKICAgICAgICAgICAgICAgICAgICBfdm0uZ2lmdERpc3BsYXlTcmMgfHwKICAgICAgICAgICAgICAgICAgICByZXF1aXJlKCJAL2Fzc2V0cy9zaG9wL2dpZnRCb3hJbWcvQ0xBU1NJQzEucG5nIiksCiAgICAgICAgICAgICAgICAgIGFsdDogIiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJnaWZ0U2VsIiB9LCBbCiAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgIHJlZjogImdpZnRCb3gxIiwKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAic2VsZWN0ZWQiLAogICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgImRhdGEtZ2lmdEJveFRweWUiOiAiZ2lmdEJveFRweWUxIiwKICAgICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9zaG9wL2dpZnRCb3hJbWcvQ0xBU1NJQzEucG5nIiksCiAgICAgICAgICAgICAgICAgIGFsdDogIiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5zZWxlY3RHaWZ0Qm94KCRldmVudCkKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICByZWY6ICJnaWZ0Qm94MiIsCiAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAiZGF0YS1naWZ0Qm94VHB5ZSI6ICJnaWZ0Qm94VHB5ZTIiLAogICAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL3Nob3AvZ2lmdEJveEltZy9DTEFTU0lDMi5wbmciKSwKICAgICAgICAgICAgICAgICAgYWx0OiAiIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnNlbGVjdEdpZnRCb3goJGV2ZW50KQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgIHJlZjogImdpZnRCb3gzIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICJkYXRhLWdpZnRCb3hUcHllIjogImdpZnRCb3hUcHllMyIsCiAgICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9hc3NldHMvc2hvcC9naWZ0Qm94SW1nL0NMQVNTSUMzLnBuZyIpLAogICAgICAgICAgICAgICAgICBhbHQ6ICIiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uc2VsZWN0R2lmdEJveCgkZXZlbnQpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICBdKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygKICAgICAgICAgICAgInNwYW4iLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJkaWFsb2ctZm9vdGVyIiwKICAgICAgICAgICAgICBhdHRyczogeyBzbG90OiAiZm9vdGVyIiB9LAogICAgICAgICAgICAgIHNsb3Q6ICJmb290ZXIiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInN1Ym1pdEdpZnRCb3giLAogICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLnNlbEdpZnRIYW5kbGUgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFtfdm0uX3YoIuWumuWItuWujOaIkCIpXQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXQogICAgICAgICAgKQogICAgICAgIF0KICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImVsLWRpYWxvZyIsCiAgICAgICAgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgdGl0bGU6ICLlrp3moLzkuL3npLznm5LlrprliLbmnI3liqHpobvnn6UiLAogICAgICAgICAgICB2aXNpYmxlOiBfdm0uTm90aWNlU3RhdGUsCiAgICAgICAgICAgIHdpZHRoOiAiNTIlIiwKICAgICAgICAgICAgY2VudGVyOiAiIgogICAgICAgICAgfSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICJ1cGRhdGU6dmlzaWJsZSI6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgIF92bS5Ob3RpY2VTdGF0ZSA9ICRldmVudAogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygiaDEiLCBbCiAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiLi4vLi4vLi4vYXNzZXRzL2hlYWRlci9zdGFycy5wbmciKSwKICAgICAgICAgICAgICAgIGFsdDogIuasoui/juadpeWIsOWuneagvOS4veeahOS4lueVjCIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGV4dCIgfSwgWwogICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICBfYygiaSIsIFtfdm0uX3YoIjEuIildKSwKICAgICAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgICAgICBfYygic3BhbiIsIFsKICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgIuWuneagvOS4veekvOebkuacjeWKoeS7hemAgueUqOS6jumDqOWIhuePoOWuneOAgeearuWFt+OAgemFjemlsOOAgeaJi+ihqOexu+S6p+WTge+8jOS4jemAgueUqOS6ju+8iDHvvInpppnmsLTnsbvkuqflk4HjgIHvvIgy77yJ6Z2e5bi46KeE5bC65a+455qE54+g5a6d44CB55qu5YW344CB6YWN6aWw57G75Lqn5ZOB44CB5Lul5Y+K77yIM++8ieWFtuS7luacieS4k+mFjeWMheijheeahOS6p+WTgeOAguivt+aCqOazqOaEj++8jOWwveeuoeaCqOW3suWujOaIkOS4i+WNlea1geeoi++8jOS9huiAg+iZkeWunumZheS9nOWTgeeahOeJueaAp++8iOWmguaYk+iktuease+8ieaIluiAheS9nOWTgeeahOWwuuWvuO+8iOWmguWkp+S6juekvOebkuWwuuWvuO+8ieaIluiAheWFtuS7lueJueauiuWOn+WboO+8jOWPr+iDveWtmOWcqOWunumZheaXoOazlemAgueUqOekvOebkueahOaDheW9ou+8jOaVrOivt+iwheino+OAguWuneagvOS4vemhvuWuouacjeWKoeS4reW/g+aIluWcqOe6v+WuouacjeS8muWwveW/q+mAmuefpeaCqOOAgiIKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgX2MoImkiLCBbX3ZtLl92KCIyLiIpXSksCiAgICAgICAgICAgICAgX2MoInNwYW4iLCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICIg5a6d5qC85Li956S855uS5pyN5Yqh5bCG5o+Q5L6b5pel5bi45Li76aKY56S855uS77yI6K+45aaC55Sf5pel44CB54ix5oOF562J77yJ77yM5bm25LiU5bCG5qC55o2u5LiN5ZCM5a2j6IqC77yI5oiW6IqC5pel77yJ5o+Q5L6b5pyJ6ZmQ5pWw6YeP55qE5a2j6IqC77yI5oiW6IqC5pel77yJ5Li76aKY56S855uS44CCIgogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICBfYygiaSIsIFtfdm0uX3YoIjMuIildKSwKICAgICAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgICAgICBfYygic3BhbiIsIFsKICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgIuWuneagvOS4veekvOebkuacjeWKoeaPkOS+m+ekvOebkuekuuS+i+Wbvu+8jOaWueS+v+aCqOWPguiAg+WSjOmAieaLqeOAguivt+aCqOS7peWunueJqeekvOebkuaViOaenOS4uuS9s+OAgiIKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgX2MoImkiLCBbX3ZtLl92KCI0LiIpXSksCiAgICAgICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICAgICAgX2MoInNwYW4iLCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICLku7vkvZXnlpHpl67or7fmgqjpmo/ml7boh7TnlLXlrp3moLzkuL3pob7lrqLmnI3liqHkuK3lv4M0MDAtMDAwLTY2OTnvvIzmiJbogZTns7vlnKjnur/lrqLmnI3jgIIiCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0pCiAgICAgICAgXQogICAgICApLAogICAgICBfYygKICAgICAgICAiZWwtZGlhbG9nIiwKICAgICAgICB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICB0aXRsZTogIuivt+mAieaLqeeyvuWTgeW6l+acjeWKoSIsCiAgICAgICAgICAgIHZpc2libGU6IF92bS5zZWxlY3RTZXJ2ZSwKICAgICAgICAgICAgd2lkdGg6ICIzMCUiLAogICAgICAgICAgICBjZW50ZXI6ICIiCiAgICAgICAgICB9LAogICAgICAgICAgb246IHsKICAgICAgICAgICAgInVwZGF0ZTp2aXNpYmxlIjogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgX3ZtLnNlbGVjdFNlcnZlID0gJGV2ZW50CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIFsKICAgICAgICAgIF9jKCJoMSIsIFsKICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCIuLi8uLi8uLi9hc3NldHMvaGVhZGVyL3N0YXJzLnBuZyIpLAogICAgICAgICAgICAgICAgYWx0OiAi5qyi6L+O5p2l5Yiw5a6d5qC85Li955qE5LiW55WMIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImJ1dHRvbiIsIHsgc3RhdGljQ2xhc3M6ICJ0b1N0b3Jlc2hvcCIgfSwgW192bS5fdigi5Yiw5bqX6Ieq5Y+WIildKSwKICAgICAgICAgIF9jKCJidXR0b24iLCB7IHN0YXRpY0NsYXNzOiAiYXBwb2ludG1lbnQiIH0sIFtfdm0uX3YoIumihOe6puWIsOW6lyIpXSkKICAgICAgICBdCiAgICAgICkKICAgIF0sCiAgICAxCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhdGVseUxvb2tUaXRsZSIgfSwgWwogICAgICBfYygiaDMiLCBbX3ZtLl92KCLmnIDov5HmtY/op4giKV0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygicCIsIFsKICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCLnvJblj7ciKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoIjI4NzYxMiIpXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}