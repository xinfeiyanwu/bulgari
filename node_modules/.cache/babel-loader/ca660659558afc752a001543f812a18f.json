{"remainingRequest":"C:\\Users\\82019\\bulgari\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\82019\\bulgari\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\82019\\bulgari\\src\\mock\\userOperation\\login.js","dependencies":[{"path":"C:\\Users\\82019\\bulgari\\src\\mock\\userOperation\\login.js","mtime":1587129910500},{"path":"C:\\Users\\82019\\bulgari\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\82019\\bulgari\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\82019\\bulgari\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IE1vY2sgZnJvbSAnbW9ja2pzJzsKaW1wb3J0IHsgSlNFbmNyeXB0IH0gZnJvbSAnanNlbmNyeXB0JzsKdmFyIHByaXZrZXkgPSAiXG4gICAgICAgICAgICAgICAgICAgIC0tLS0tQkVHSU4gUFJJVkFURSBLRVktLS0tLVxuTUlJQ2RnSUJBREFOQmdrcWhraUc5dzBCQVFFRkFBU0NBbUF3Z2dKY0FnRUFBb0dCQVBjSGR5ZVVyZmZxVWRDTlxuN25mNllpSDk4Zk1ZVUVDMGZwcVdvTmRyZ3VhNU15N0FGQ29FRWlENGNnaHYzVFRYQ1p3d1ZEQzU0Z2IvKzlYWFxuWFpSSlo1a0U2L1dBcnpxNE04MTJ4UFYwb3BDSlZNclRnaGZHdVdWcmJWYURjRGJmL2YrNmNXakpwVHZkR0V1NVxuSFRJR3B3dnJVNjBZOExMRGR0TVA3ZjBHYmtGUkFnTUJBQUVDZ1lCQlNNL012aFpiOXFrNG5NbnhHMUxqK09FQVxuaGVSdnRVUGdSdjZxNzliZ2N3RjcwWGVDd3lDblpnRjlDVk5FcTYvMmZ5OUEwVjlTeWtRYjk1YmJvYXFtMlNJN1xuNkoxMDVieDE0ZGk1cnEwUWdhUXdsczk2c1JscVc5a0N1a0pXSldPNjU2ZGw5MHpvVVVWRHZWWk4yalovSFZPdFxuNzFibnF2bjNDbHVQc1JMbG9RSkJBUHh2MXRDODVuR2c5TGM1SjBub05uZWUrUFZZZ2dselc4eVB6TXU4UE9QclxuM1JXbmtqd05HTm1SQjc5YnJZM1AzbHZ2c1d6RVNhMjZyNTdnQTFjRURBY0NRUUQ2aEJZRGFFR0x1Z3pyVVRqVlxuSXlENTM2VSt4SGFoNWZqQWcrM3cyOUdxenhZUFN2OGhXNW5nY2dhUmJ3Mi9JY1ZVZHA0WXBwSnhXYnFjNG95WVxuVWFIbkFrRUFnQlN1eGRKU2lpekVmWUorTUwybGhTUWY1VHczSGx4dG8ya0MzQXh5U0tLUDFrRGpyWnhuazF4R1xudGd6cURoMytFRitaZ2pwRnQrUVUzMk9CemxDN1dRSkFkd2h6L1VKNGdvL3d1NDlvVmIzUFdXdHU5UmdjMW1pVFxuZmNZeU5SUDkyQTkyQitZMnUvN3VhcnREYTY4ODlPaHkvdU10MDhDeUxMSFovZG1YdkhodFdRSkFFVVpVRkU1QlxuaXd5M29kZmtJdjJzcFVuZHV1YXRYRW8yM3hPNUhXVHlHVVl4amRXMk53c25LQytJelFqc2UwdkRxRjBVdy9CMlxuL1FlUzFJYnVURm5YZlE9PVxuICAgICAgICAgICAgICAgICAgICAtLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tXG4iOwp2YXIgTnVtYmVyTGlzdCA9IFt7CiAgbnVtOiAnMTExMTExMTExMTEnLAogIHBzdzogJ2FkbWluJwp9LCB7CiAgbnVtOiAnMTIzNDU2Nzg5MTInLAogIHBzdzogJ3dlcndlZmRzMjMyJwp9LCB7CiAgbnVtOiAnMTIzNDU2Nzg5MjEnLAogIHBzdzogJ3RyZWdkZmQzMjQzJwp9LCB7CiAgbnVtOiAnMTIzNDU2Nzg5MzEnLAogIHBzdzogJ3RyeXJ0eXJ0eScKfSwgewogIG51bTogJzEyMzQ1Njc4OTA0JywKICBwc3c6ICd0cmV0ZHM0MjNkcycKfV07CnZhciBsb2dpblJlc3VsdCA9IFt7CiAgY29kZTogMjAwLAogIG1zZzogJ+eZu+W9leaIkOWKnycsCiAgbnVtOiAxMTExMTExMTExMSwKICB0b2tlbjogJzEyMzFkYXcyMzQyM3NmYWRzYWQnCn0sIHsKICBjb2RlOiAxMTAsCiAgbXNnOiAn5a+G56CB6ZSZ6K+vJwp9LCB7CiAgY29kZTogMTExLAogIG1zZzogJ+i0puWPt+S4jeWtmOWcqCcKfV07CmV4cG9ydCBkZWZhdWx0IE1vY2subW9jaygnL2xvZ2luJywgJ3Bvc3QnLCBmdW5jdGlvbiAob3B0aW9ucykgewogIHZhciBkZWNyeXB0ID0gbmV3IEpTRW5jcnlwdCgpOwogIHZhciBkYXRhID0gSlNPTi5wYXJzZShvcHRpb25zLmJvZHkpOyAvL+ino+WvhgoKICBkZWNyeXB0LnNldFByaXZhdGVLZXkocHJpdmtleSk7CgogIGZvciAodmFyIGtleSBpbiBkYXRhKSB7CiAgICBkYXRhW2tleV0gPSBkZWNyeXB0LmRlY3J5cHQoZGF0YVtrZXldKTsKICB9IC8v5qOA5p+l55m75b2V54q25oCBCiAgLy/lhYjmo4Dmn6XnlLXor53mmK/lkKblrZjlnKjvvIzlpoLmnpzkuI3lrZjlnKjlsLHmmK/msqHms6jlhozov4fjgILmjqXkuIvmnaXmo4DmtYvlr4bnoIHmmK/lkKbmraPnoa4KICAvL+Wvhueggeato+ehruWImeeZu+W9leaIkOWKnzvkuI3mraPnoa7ov5Tlm57nmbvlvZXlr4bnoIHplJnor6/nirbmgIHjgIIKICAvL+ajgOafpeeUteivneaYr+WQpuWtmOWcqOWPr+S7peWPjeWQkeaAnee7tO+8jOWwseaYr+WmguaenOW3sue7j+ajgOa1i+WIsOeUteivneWPt+eggeWtmOWcqOS6hgogIC8v5Lmf5bCx5piv5LiN5a2Y5Zyo55S16K+d5Y+356CB5LiN5a2Y5Zyo55qE5Y+v6IO944CC5Y+q5pyJ5qOA5rWL5a6M5q+V6YO95rKh5qOA5rWL5Yiw55S16K+d5Y+356CB77yM5omN5piv55S16K+d5Y+356CB5rKh5rOo5YaM6L+H44CC6L+Z5pe25YCZ5omN6L+U5Zue6LSm5Y+35LiN5a2Y5Zyo44CCCgoKICBmb3IgKHZhciBpID0gMDsgaSA8IE51bWJlckxpc3QubGVuZ3RoOyBpKyspIHsKICAgIGlmIChOdW1iZXJMaXN0W2ldLm51bSA9PSBkYXRhLk51bWJlcikgewogICAgICBpZiAoTnVtYmVyTGlzdFtpXS5wc3cgPT0gZGF0YS5wc3cpIHsKICAgICAgICBjb25zb2xlLmxvZygnU3VjY2VzcycpOwogICAgICAgIHJldHVybiBsb2dpblJlc3VsdFswXTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmxvZygncHN3RXJyb3InKTsKICAgICAgICByZXR1cm4gbG9naW5SZXN1bHRbMV07CiAgICAgIH0KICAgIH0KICB9CgogIGNvbnNvbGUubG9nKCdOdW1iZXJFcnJvcicpOwogIHJldHVybiBsb2dpblJlc3VsdFsyXTsKfSk7"},{"version":3,"sources":["C:/Users/82019/bulgari/src/mock/userOperation/login.js"],"names":["Mock","JSEncrypt","privkey","NumberList","num","psw","loginResult","code","msg","token","mock","options","decrypt","data","JSON","parse","body","setPrivateKey","key","i","length","Number","console","log"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA,IAAMC,OAAO,m9BAAb;AAmBA,IAAMC,UAAU,GAAG,CACf;AACIC,EAAAA,GAAG,EAAE,aADT;AAEIC,EAAAA,GAAG,EAAE;AAFT,CADe,EAKf;AACID,EAAAA,GAAG,EAAE,aADT;AAEIC,EAAAA,GAAG,EAAE;AAFT,CALe,EASf;AACID,EAAAA,GAAG,EAAE,aADT;AAEIC,EAAAA,GAAG,EAAE;AAFT,CATe,EAaf;AACID,EAAAA,GAAG,EAAE,aADT;AAEIC,EAAAA,GAAG,EAAE;AAFT,CAbe,EAiBf;AACID,EAAAA,GAAG,EAAE,aADT;AAEIC,EAAAA,GAAG,EAAE;AAFT,CAjBe,CAAnB;AAsBA,IAAMC,WAAW,GAAG,CAChB;AACIC,EAAAA,IAAI,EAAE,GADV;AAEIC,EAAAA,GAAG,EAAE,MAFT;AAGIJ,EAAAA,GAAG,EAAE,WAHT;AAIIK,EAAAA,KAAK,EAAE;AAJX,CADgB,EAOhB;AACIF,EAAAA,IAAI,EAAE,GADV;AAEIC,EAAAA,GAAG,EAAE;AAFT,CAPgB,EAWhB;AACID,EAAAA,IAAI,EAAE,GADV;AAEIC,EAAAA,GAAG,EAAE;AAFT,CAXgB,CAApB;AAiBA,eAAeR,IAAI,CAACU,IAAL,CAAU,QAAV,EAAoB,MAApB,EAA4B,UAACC,OAAD,EAAW;AAClD,MAAIC,OAAO,GAAG,IAAIX,SAAJ,EAAd;AACA,MAAIY,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAACK,IAAnB,CAAX,CAFkD,CAGlD;;AACAJ,EAAAA,OAAO,CAACK,aAAR,CAAsBf,OAAtB;;AACA,OAAI,IAAIgB,GAAR,IAAeL,IAAf,EAAoB;AAChBA,IAAAA,IAAI,CAACK,GAAD,CAAJ,GAAYN,OAAO,CAACA,OAAR,CAAgBC,IAAI,CAACK,GAAD,CAApB,CAAZ;AACH,GAPiD,CAQlD;AACA;AACA;AACA;AACA;;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAChB,UAAU,CAACiB,MAAzB,EAAgCD,CAAC,EAAjC,EAAoC;AAChC,QAAGhB,UAAU,CAACgB,CAAD,CAAV,CAAcf,GAAd,IAAqBS,IAAI,CAACQ,MAA7B,EAAqC;AACjC,UAAGlB,UAAU,CAACgB,CAAD,CAAV,CAAcd,GAAd,IAAqBQ,IAAI,CAACR,GAA7B,EAAkC;AAC9BiB,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,eAAOjB,WAAW,CAAC,CAAD,CAAlB;AACH,OAHD,MAII;AACAgB,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,eAAOjB,WAAW,CAAC,CAAD,CAAlB;AACH;AACJ;AACJ;;AACDgB,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,SAAOjB,WAAW,CAAC,CAAD,CAAlB;AACH,CA5Bc,CAAf","sourcesContent":["import Mock from 'mockjs'\r\nimport { JSEncrypt } from 'jsencrypt'\r\n\r\nconst privkey = `\r\n                    -----BEGIN PRIVATE KEY-----\r\nMIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAPcHdyeUrffqUdCN\r\n7nf6YiH98fMYUEC0fpqWoNdrgua5My7AFCoEEiD4cghv3TTXCZwwVDC54gb/+9XX\r\nXZRJZ5kE6/WArzq4M812xPV0opCJVMrTghfGuWVrbVaDcDbf/f+6cWjJpTvdGEu5\r\nHTIGpwvrU60Y8LLDdtMP7f0GbkFRAgMBAAECgYBBSM/MvhZb9qk4nMnxG1Lj+OEA\r\nheRvtUPgRv6q79bgcwF70XeCwyCnZgF9CVNEq6/2fy9A0V9SykQb95bboaqm2SI7\r\n6J105bx14di5rq0QgaQwls96sRlqW9kCukJWJWO656dl90zoUUVDvVZN2jZ/HVOt\r\n71bnqvn3CluPsRLloQJBAPxv1tC85nGg9Lc5J0noNnee+PVYgglzW8yPzMu8POPr\r\n3RWnkjwNGNmRB79brY3P3lvvsWzESa26r57gA1cEDAcCQQD6hBYDaEGLugzrUTjV\r\nIyD536U+xHah5fjAg+3w29GqzxYPSv8hW5ngcgaRbw2/IcVUdp4YppJxWbqc4oyY\r\nUaHnAkEAgBSuxdJSiizEfYJ+ML2lhSQf5Tw3Hlxto2kC3AxySKKP1kDjrZxnk1xG\r\ntgzqDh3+EF+ZgjpFt+QU32OBzlC7WQJAdwhz/UJ4go/wu49oVb3PWWtu9Rgc1miT\r\nfcYyNRP92A92B+Y2u/7uartDa6889Ohy/uMt08CyLLHZ/dmXvHhtWQJAEUZUFE5B\r\niwy3odfkIv2spUnduuatXEo23xO5HWTyGUYxjdW2NwsnKC+IzQjse0vDqF0Uw/B2\r\n/QeS1IbuTFnXfQ==\r\n                    -----END PRIVATE KEY-----\r\n`\r\n\r\nconst NumberList = [\r\n    {\r\n        num: '11111111111',\r\n        psw: 'admin'\r\n    },\r\n    {\r\n        num: '12345678912',\r\n        psw: 'werwefds232'\r\n    },\r\n    {\r\n        num: '12345678921',\r\n        psw: 'tregdfd3243'\r\n    },\r\n    {\r\n        num: '12345678931',\r\n        psw: 'tryrtyrty'\r\n    },\r\n    {\r\n        num: '12345678904',\r\n        psw: 'tretds423ds'\r\n    }\r\n]\r\nconst loginResult = [\r\n    {    \r\n        code: 200,\r\n        msg: '登录成功',\r\n        num: 11111111111,\r\n        token: '1231daw23423sfadsad',\r\n    },\r\n    {\r\n        code: 110,\r\n        msg: '密码错误',\r\n    },\r\n    {\r\n        code: 111,\r\n        msg: '账号不存在',\r\n    },\r\n]\r\n\r\nexport default Mock.mock('/login', 'post', (options)=>{\r\n    let decrypt = new JSEncrypt();\r\n    let data = JSON.parse(options.body);\r\n    //解密\r\n    decrypt.setPrivateKey(privkey)\r\n    for(let key in data){\r\n        data[key] = decrypt.decrypt(data[key]);\r\n    }\r\n    //检查登录状态\r\n    //先检查电话是否存在，如果不存在就是没注册过。接下来检测密码是否正确\r\n    //密码正确则登录成功;不正确返回登录密码错误状态。\r\n    //检查电话是否存在可以反向思维，就是如果已经检测到电话号码存在了\r\n    //也就是不存在电话号码不存在的可能。只有检测完毕都没检测到电话号码，才是电话号码没注册过。这时候才返回账号不存在。\r\n    for(let i=0;i<NumberList.length;i++){\r\n        if(NumberList[i].num == data.Number) {\r\n            if(NumberList[i].psw == data.psw) {\r\n                console.log('Success');\r\n                return loginResult[0]\r\n            }\r\n            else{\r\n                console.log('pswError');\r\n                return loginResult[1]\r\n            }\r\n        }\r\n    }\r\n    console.log('NumberError')\r\n\r\n    return loginResult[2]\r\n})"]}]}